<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用Hexo-GitHub搭建个人的博客页面</title>
    <link href="/2024/06/15/%E4%BD%BF%E7%94%A8Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2/"/>
    <url>/2024/06/15/%E4%BD%BF%E7%94%A8Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="使用hexo-github的原因？"><a href="#使用hexo-github的原因？" class="headerlink" title="使用hexo+github的原因？"></a>使用hexo+github的原因？</h1><ul><li><p>支持markdown格式，这样对于我这样完全不熟悉前端的人可以轻松编写包含代码块的文档，轻松实现技术的分享。</p></li><li><p>使用github的服务器，也使得我的内容更加易于分享。并且不用担心本地的站点被删除。</p></li><li><p>本文记录自己在搭建个人博客的一些过程和遇到的一些坑，并且记录相关的命令方便查阅。</p></li></ul><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>因为需要利用github服务器的资源搭载的相关功能，所以首先应当申请有个人的github账号。登陆<a href="https://www.github.com/">github官网</a>进行相应的注册即可。</p><h2 id="安装git和node-js"><a href="#安装git和node-js" class="headerlink" title="安装git和node.js"></a>安装git和node.js</h2><p>程序员朋友对于git都不陌生。因为我们需要使用github托管我们的前端静态资源，因此需要用到git，前端引擎使用的是node.js同样需要安装。</p><p>在mac环境中，可以使用homebrew来安装git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install git<br></code></pre></td></tr></table></figure><p>同样使用homebrew安装nvm：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install nvm<br></code></pre></td></tr></table></figure><p>安装完成后，配置环境变量。使用下面的命令编辑：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.zshrc<br></code></pre></td></tr></table></figure><p>在其中添加以下内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">export</span> NVM_DIR=~/.nvm<br><span class="hljs-built_in">source</span> $(brew --prefix nvm)/nvm.sh<br></code></pre></td></tr></table></figure><p>生效环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure><p>安装node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvm install &lt;version&gt;<br></code></pre></td></tr></table></figure><h2 id="本地连接github"><a href="#本地连接github" class="headerlink" title="本地连接github"></a>本地连接github</h2><p>由于现在github已经不再支持使用账号+密码的方式进行连接和安全验证（会被拒绝访问），因此我们使用ssh密钥的方式来连接。</p><p>打开终端，使用下列命令来在本地配置git的账号和邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;&lt;github_username&gt;&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;&lt;github_email&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>然后创建ssh密钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;&lt;github_email&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>然后创建后找到提示的路径地址，复制其中所有的内容。登陆github，找到自己的profile-&gt;setting，在SSH and GPG keys中找到add SSH key，将刚刚生成的密钥复制过来。</p><p>可以使用以下命令测试是否能够完成和服务器之间的连接。若提示中出现<code>...You&#39;ve successfully authenticated...</code>等内容就说明能够完成连接。可能附加还会提示不允许shell连接之类的，不用去管。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh git@github.com<br></code></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>hexo部分的内容可以参考<a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a>和<a href="https://hexo.io/themes/">hexo官方主题</a>。</p><p>可以使用以下命令安装hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h1 id="hexo常见命令"><a href="#hexo常见命令" class="headerlink" title="hexo常见命令"></a>hexo常见命令</h1><ul><li><p>创建新的博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;&lt;blog_name&gt;&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>开启本地的hexo服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure></li><li><p>编译md文件为前端的静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo  generate<br></code></pre></td></tr></table></figure></li><li><p>将资源部署到服务器端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AIGC：姿势引导的人物图像合成</title>
    <link href="/2024/04/04/AIGC%EF%BC%9A%E5%A7%BF%E5%8A%BF%E5%BC%95%E5%AF%BC%E7%9A%84%E4%BA%BA%E7%89%A9%E5%9B%BE%E5%83%8F%E5%90%88%E6%88%90/"/>
    <url>/2024/04/04/AIGC%EF%BC%9A%E5%A7%BF%E5%8A%BF%E5%BC%95%E5%AF%BC%E7%9A%84%E4%BA%BA%E7%89%A9%E5%9B%BE%E5%83%8F%E5%90%88%E6%88%90/</url>
    
    <content type="html"><![CDATA[<p>这篇文章主要是简单介绍一下我们的工作《DNAF: Diffusion with Noise-Aware Feature for Pose-Guided Person Image Synthesis》，目前已经被ICME 2024接收，<a href="https://github.com/WillowKaze/DNAF">仓库地址</a>,我打算等正式见刊后公布论文地址，同时将完整的模型代码和训练代码公布。</p><h1 id="什么是姿势引导的人物图像合成"><a href="#什么是姿势引导的人物图像合成" class="headerlink" title="什么是姿势引导的人物图像合成"></a>什么是姿势引导的人物图像合成</h1><p>姿势引导的人物图像合成(Pose-Guided Person Image Synthesis, PGPIS)任务是一类图像生成任务。需要用户指定一张源图像：</p><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Java线程同步-交替打印究竟有多少种写法？</title>
    <link href="/2024/04/04/Java%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5-%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E7%A9%B6%E7%AB%9F%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%86%99%E6%B3%95%EF%BC%9F/"/>
    <url>/2024/04/04/Java%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5-%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E7%A9%B6%E7%AB%9F%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%86%99%E6%B3%95%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="synchronized关键字"><a href="#synchronized关键字" class="headerlink" title="synchronized关键字"></a>synchronized关键字</h1><p>这是最常想到的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>().start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CountDownLatch记数锁"><a href="#CountDownLatch记数锁" class="headerlink" title="CountDownLatch记数锁"></a>CountDownLatch记数锁</h1><p>使用</p><h1 id="Semaphore信号量"><a href="#Semaphore信号量" class="headerlink" title="Semaphore信号量"></a>Semaphore信号量</h1>]]></content>
    
    
    <categories>
      
      <category>Java语言基础</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>风柳轩记</title>
    <link href="/2024/04/03/%E9%A3%8E%E6%9F%B3%E8%BD%A9%E8%AE%B0/"/>
    <url>/2024/04/03/%E9%A3%8E%E6%9F%B3%E8%BD%A9%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>朋友们，你们好呀！我是昔年种柳，这里是风柳轩，愿与诸君同听柳林风声。</p><h2 id="我为什么开始写博客"><a href="#我为什么开始写博客" class="headerlink" title="我为什么开始写博客"></a>我为什么开始写博客</h2><p>我觉得，作为一个计算机人，拥有自己的博客记录自己的学习的诸多心得与体会，是一件十分重要的事情。</p><h2 id="我会更新哪些内容"><a href="#我会更新哪些内容" class="headerlink" title="我会更新哪些内容"></a>我会更新哪些内容</h2><p>姜太公在此，百无禁忌！<br>毫无疑问，在技术上，我是新人，但是有诸多我容易忘记的，需要记忆背诵的，深入阅读源码的诸多工具，有自己的心得体会的，都会在此更新。<br>在学术上的遇到的好玩的模型的运行，部署，有意思的技术我自己去尝试的，都会在这里与大家分享！<br>参加学术会议，面试求职的各种心得体会，也可以在这里悄悄与大家分享！</p><p>愿少年，乘风破浪，他日不忘化雨功！</p>]]></content>
    
    
    <categories>
      
      <category>说点心里话</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈梦呓</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
